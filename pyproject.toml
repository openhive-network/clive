[build-system]
requires = [
    "poetry-core>=1.7.0",
    "poetry-dynamic-versioning>=1.0.0,<2.0.0",
]
build-backend = "poetry_dynamic_versioning.backend"

[tool.poetry]
name = "clive"
version = "0.0.0"
description = "CLI application for interacting with the Hive blockchain."
readme = "README.md"
repository = "https://gitlab.syncad.com/hive/clive"
authors = [
    "Mateusz Å»ebrak <mzebrak@syncad.com>",
    "Krzysztof Mochocki <kmochocki@syncad.com>"
]
packages = [
    { include = "clive" },
]
include = [
    "settings.toml",
]
source = [
    { name = "PyPI", priority = "primary" },
    { name = "gitlab-schemas", url = "https://gitlab.syncad.com/api/v4/projects/362/packages/pypi/simple", priority = "supplemental" },
    { name = "gitlab-wax", url = "https://gitlab.syncad.com/api/v4/projects/419/packages/pypi/simple", priority = "supplemental" },
    { name = "gitlab-helpy", url = "https://gitlab.syncad.com/api/v4/projects/434/packages/pypi/simple", priority = "supplemental" },
]


[tool.poetry.dependencies]
python = "^3.10"
dynaconf = "3.1.11"
loguru = "0.7.2"
textual = "0.62.0"
aiohttp = "3.9.1"
pydantic = "1.10.11"
typer = { extras = ["all"], version = "0.9.0" }
inflection = "0.5.1"
humanize = "4.6.0"

wax = "0.0.3a2.dev300+4b5789e"
schemas = "0.0.1.dev305+31029b3"


[tool.poetry.group.embeddedtestnet.dependencies]
clive-local-tools = { path = "tests/clive-local-tools", develop = true }
test-tools = { path = "hive/tests/python/hive-local-tools/test-tools" }
pytest = "7.2.0"  # required by test-tools, otherwise they will fail


[tool.poetry.group.dev.dependencies]
black = "24.4.2"
mypy = "1.10.0"
pre-commit = "2.21.0"
pytest = "7.2.0"
pytest-asyncio = "0.21.0"
pytest-xdist = "3.1.0"
pytest-timeout = "2.3.1"
ruff = "0.4.8"
types-pyyaml = "6.0.12.4"
textual-dev = "1.5.1"
clive-local-tools = { path = "tests/clive-local-tools", develop = true }
test-tools = { path = "hive/tests/python/hive-local-tools/test-tools", develop = true }


[tool.poetry.scripts]
clive = "clive.main:main"
clive-dev = "clive.dev:main"


[tool.poetry-dynamic-versioning]
enable = true
format-jinja = """
    {%- set dirty_postfix = '.dirty' if dirty else '' -%}
    {%- if distance == 0 and not dirty -%}
        {{ serialize_pep440(base, stage, revision) }}
    {%- elif revision is not none -%}
        {{ serialize_pep440(base, stage, revision + 1, dev=distance, metadata=[commit]) }}{{ dirty_postfix }}
    {%- else -%}
        {{ serialize_pep440(bump_version(base), stage, revision, dev=distance, metadata=[commit]) }}{{ dirty_postfix }}
    {%- endif -%}
"""

[tool.poetry-dynamic-versioning.substitution]
files = [
    "clive/__init__.py",
]


[tool.black]
line-length = 120
preview = true
enable-unstable-feature = ["multiline_string_handling"]


[tool.mypy]
strict = true
disallow_untyped_decorators = false
plugins = "pydantic.mypy"

[[tool.mypy.overrides]]
module = ["test_tools.*"]
ignore_missing_imports = true

[tool.ruff]
line-length = 120

[tool.ruff.lint]
select = [# https://beta.ruff.rs/docs/rules/
    "F",
    "E",
    "W",
    "C",
    "I",
    "N",
    "D",
    "UP",
    "YTT",
    "ASYNC",
    "BLE",
    "B",
    "A",
    "C4",
    "ISC",
    "INP",
    "PIE",
    "T20",
    "PYI",
    "PT",
    "RSE",
    "RET",
    "SIM",
    "TID",
    "TCH",
    "ARG",
    "PTH",
    "ERA",
    "PL",
    "TRY",
    "FLY",
    "PERF",
    "FURB",
    "RUF",
]
ignore = [
    "E501", # line too long; TODO: enable because Black does not handle all cases correctly (allows for longer lines)
    "D1", # missing docstring in public
    "D203", # 1 blank line required before class docstring; because we re using D211
    "D212", # Multi-line docstring summary should start at the first line; because we re using D213
    "D401", # first line should be in imperative mood; # TODO: could be fixed
    "D413", # Missing blank line after last section
    "PT004", # fixture does not return anything, add leading underscore;  issue: pytest seems to ignore (not launch) auto-use fixtures with leading underscode
    "TRY003", # Avoid specifying long messages outside the exception class; too restrictive
    "RUF012", # TODO: Check if we can fix it, it's kinda Textual-specific
]

[tool.ruff.lint.isort]
known-first-party = ["clive", "wax", "schemas", "clive_local_tools"]
required-imports = ["from __future__ import annotations"]

[tool.ruff.lint.per-file-ignores]
"clive/__private/cli/**" = [
    "I002", # TODO: Causes error https://github.com/tiangolo/typer/issues/296#issuecomment-1494005853
    "UP007", # TODO: Remove when https://github.com/tiangolo/typer/pull/548 will be merged
    "B008", # Do not perform function call {name} in argument defaults; in Typer it is common to do that
    "PLR0913", # too restrictive
    "RUF009", # common pattern for common options
]
"clive/__private/ui/**" = [
    "PLR0913", # too restrictive
]


[tool.pytest.ini_options]
asyncio_mode = "auto"
testpaths = ["tests"]
addopts = "--strict-markers"
